{
	"info": {
		"_postman_id": "1d4c11d1-e636-44aa-8fd0-4e55f0c28f15",
		"name": "SAGA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Нормальный сценарий",
			"item": [
				{
					"name": "Платеж.Создаем пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"UserId\", responseJSON[\"userId\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{$guid}}\",\r\n  \"cashBalance\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Billing/api/Payment/UserCash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Billing",
								"api",
								"Payment",
								"UserCash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ.Новый заказ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"OrderId\", responseJSON[\"id\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order?clientId={{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order"
							],
							"query": [
								{
									"key": "clientId",
									"value": "{{UserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить информацию о товаре №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Резерв товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": {{OrderId}},\r\n  \"stockItem\": {\r\n    \"id\": 1,\r\n    \"count\": 2\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что добавился товар",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Stok Item Added\", function () {\r",
									"    pm.expect(_isContains(jsonData.orderItems, \"id\" ,1)).to.be.true;\r",
									"});\r",
									"\r",
									"function _isContains(json, keyname, value) {\r",
									" return Object.keys(json).some(key => {\r",
									"        return typeof json[key] === 'object' ? \r",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;\r",
									"    });\r",
									"}\r",
									"\r",
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TotalPrice\", responseJSON[\"totalPrice\"])\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Получить доступные слоты доставки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TimeSlotId\", responseJSON[0][\"id\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.collectionVariables.set(\"TimeSlotDate\", moment().format((\"YYYY-MM-DDTHH:mm:ss\")))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Available?date={{TimeSlotDate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Available"
							],
							"query": [
								{
									"key": "date",
									"value": "{{TimeSlotDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Резерв слота доставки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"timeSlot\": {\r\n    \"id\": {{TimeSlotId}}\r\n  },\r\n  \"deliveryDate\": \"{{TimeSlotDate}}Z\",\r\n  \"orderId\": {{OrderId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что слот добавился",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Delivery Slot\", function () {\r",
									"    pm.expect(jsonData.deliveryTimeSlot).not.eq(null);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Провести оплату",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{$guid}}\",\r\n  \"userId\": \"{{UserId}}\",\r\n  \"orderId\": {{OrderId}},\r\n  \"orderPrice\": {{TotalPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/Payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что заказ оплачен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status Payed\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(1)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Проверить что деньги списались",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Cash OK\", function () {\r",
									"    pm.expect(jsonData.cashBalance).not.eql(1000)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/{{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"{{UserId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Недостаточно денег",
			"item": [
				{
					"name": "Платеж.Создаем пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"UserId\", responseJSON[\"userId\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{$guid}}\",\r\n  \"cashBalance\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Billing/api/Payment/UserCash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Billing",
								"api",
								"Payment",
								"UserCash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ.Новый заказ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"OrderId\", responseJSON[\"id\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order?clientId={{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order"
							],
							"query": [
								{
									"key": "clientId",
									"value": "{{UserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить информацию о товаре №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"StockItemCount\", responseJSON[\"count\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Резерв товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": {{OrderId}},\r\n  \"stockItem\": {\r\n    \"id\": 1,\r\n    \"count\": 30\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что добавился товар",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Stok Item Added\", function () {\r",
									"    pm.expect(_isContains(jsonData.orderItems, \"id\" ,1)).to.be.true;\r",
									"});\r",
									"\r",
									"function _isContains(json, keyname, value) {\r",
									" return Object.keys(json).some(key => {\r",
									"        return typeof json[key] === 'object' ? \r",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;\r",
									"    });\r",
									"}\r",
									"\r",
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TotalPrice\", responseJSON[\"totalPrice\"])\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Получить доступные слоты доставки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TimeSlotId\", responseJSON[0][\"id\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.collectionVariables.set(\"TimeSlotDate\", moment().format((\"YYYY-MM-DDTHH:mm:ss\")))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Available?date={{TimeSlotDate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Available"
							],
							"query": [
								{
									"key": "date",
									"value": "{{TimeSlotDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Резерв слота доставки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"timeSlot\": {\r\n    \"id\": {{TimeSlotId}}\r\n  },\r\n  \"deliveryDate\": \"{{TimeSlotDate}}Z\",\r\n  \"orderId\": {{OrderId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что слот добавился",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Delivery Slot\", function () {\r",
									"    pm.expect(jsonData.deliveryTimeSlot).not.eq(null);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Провести оплату",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"setTimeout(function(){console.log(\"Sleeping for 3 seconds for cancelation operation.\");\r",
									"  }, 3000);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{$guid}}\",\r\n  \"userId\": \"{{UserId}}\",\r\n  \"orderId\": {{OrderId}},\r\n  \"orderPrice\": {{TotalPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/Payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что заказ  сбросился",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status Not Payed\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(0)\r",
									"});\r",
									"\r",
									"pm.test(\"DeliveryTimeSlot is Empty\", function () {\r",
									"    pm.expect(jsonData.deliveryTimeSlot).to.eql(null)\r",
									"});\r",
									"\r",
									"pm.test(\"OrderItems is Empty\", function () {\r",
									"    pm.expect(jsonData.orderItems).to.empty\r",
									"});\r",
									"\r",
									"pm.test(\"Total Price is 0\", function () {\r",
									"    pm.expect(jsonData.totalPrice).to.eql(0)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Проверить что товар вернулся на склад",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Stock Items Returned\", function () {\r",
									"    pm.expect(jsonData.count).to.equal(pm.collectionVariables.get(\"StockItemCount\"))\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Слот доставки вернулся",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Delivery Slot Is Availeble\", function () {\r",
									"    pm.expect(jsonData[0].id).to.equal(pm.collectionVariables.get(\"TimeSlotId\"))\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Available?date={{TimeSlotDate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Available"
							],
							"query": [
								{
									"key": "date",
									"value": "{{TimeSlotDate}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Оплата прошла, но доставку отменили",
			"item": [
				{
					"name": "Платеж.Создаем пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"UserId\", responseJSON[\"userId\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{$guid}}\",\r\n  \"cashBalance\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Billing/api/Payment/UserCash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Billing",
								"api",
								"Payment",
								"UserCash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ.Новый заказ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"OrderId\", responseJSON[\"id\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order?clientId={{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order"
							],
							"query": [
								{
									"key": "clientId",
									"value": "{{UserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить информацию о товаре №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"StockItemCount\", responseJSON[\"count\"])\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Резерв товара",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": {{OrderId}},\r\n  \"stockItem\": {\r\n    \"id\": 1,\r\n    \"count\": 10\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что добавился товар",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Stok Item Added\", function () {\r",
									"    pm.expect(_isContains(jsonData.orderItems, \"id\" ,1)).to.be.true;\r",
									"});\r",
									"\r",
									"function _isContains(json, keyname, value) {\r",
									" return Object.keys(json).some(key => {\r",
									"        return typeof json[key] === 'object' ? \r",
									"        _isContains(json[key], keyname, value) : key === keyname && json[key] === value;\r",
									"    });\r",
									"}\r",
									"\r",
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TotalPrice\", responseJSON[\"totalPrice\"])\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Получить доступные слоты доставки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseJSON = JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"TimeSlotId\", responseJSON[0][\"id\"])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Available?date={{TimeSlotDate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Available"
							],
							"query": [
								{
									"key": "date",
									"value": "{{TimeSlotDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Резерв слота доставки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"timeSlot\": {\r\n    \"id\": {{TimeSlotId}}\r\n  },\r\n  \"deliveryDate\": \"{{TimeSlotDate}}Z\",\r\n  \"orderId\": {{OrderId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Reserv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Reserv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что слот добавился",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Delivery Slot\", function () {\r",
									"    pm.expect(jsonData.deliveryTimeSlot).not.eq(null);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Провести оплату",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{$guid}}\",\r\n  \"userId\": \"{{UserId}}\",\r\n  \"orderId\": {{OrderId}},\r\n  \"orderPrice\": {{TotalPrice}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/Payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что статус заказа Оплачен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status Is Payed\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(1)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Проверить что товар списался со склада",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Stock Items Returned\", function () {\r",
									"    pm.expect(jsonData.count).not.equal(pm.collectionVariables.get(\"StockItemCount\"))\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Проверить что деньги списались",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Cash OK\", function () {\r",
									"    pm.expect(jsonData.cashBalance).not.eql(1000)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/{{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Доставка. Отмена доставки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"setTimeout(function(){console.log(\"Sleeping for 3 seconds for cancelation operation.\");\r",
									"  }, 3000);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/delivery/api/delivery/TimeSlot/Reserv?id={{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delivery",
								"api",
								"delivery",
								"TimeSlot",
								"Reserv"
							],
							"query": [
								{
									"key": "id",
									"value": "{{OrderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Заказ. Проверить, что статус заказа  Отменен",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status Is Cancel Payed\", function () {\r",
									"    pm.expect(jsonData.status).to.eql(0)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Orders/api/Order/{{OrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Orders",
								"api",
								"Order",
								"{{OrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Платеж. Проверить что деньги вернулись",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Cash OK\", function () {\r",
									"    pm.expect(jsonData.cashBalance).to.eql(1000)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/billing/api/Payment/UserCash/{{UserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"billing",
								"api",
								"Payment",
								"UserCash",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Склад. Проверить, что товар вернулся на склад",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Stock Items Returned\", function () {\r",
									"    pm.expect(jsonData.count).to.equal(pm.collectionVariables.get(\"StockItemCount\"))\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/Stock/api/Stock/Items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Stock",
								"api",
								"Stock",
								"Items",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "default"
		},
		{
			"key": "UserId",
			"value": "",
			"type": "default"
		},
		{
			"key": "OrderId",
			"value": "",
			"type": "default"
		},
		{
			"key": "TimeSlotDate",
			"value": "",
			"type": "default"
		},
		{
			"key": "TotalPrice",
			"value": "",
			"type": "default"
		},
		{
			"key": "TimeSlotId",
			"value": "",
			"type": "default"
		},
		{
			"key": "StockItemCount",
			"value": "",
			"type": "default"
		}
	]
}